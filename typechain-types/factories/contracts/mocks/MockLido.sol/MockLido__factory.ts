/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockLido,
  MockLidoInterface,
} from "../../../../contracts/mocks/MockLido.sol/MockLido";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "Submitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "STAKING_APR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "getPooledEthByShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pooledEthAmount",
        type: "uint256",
      },
    ],
    name: "getSharesByPooledEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRebaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "rebase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referral",
        type: "address",
      },
    ],
    name: "submit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601781526020017f4c6971756964207374616b656420457468657220322e30000000000000000000815250604051806040016040528060058152602001640e6e88aa8960db1b8152508160039081620000779190620002c7565b506004620000868282620002c7565b505050620000a53369d3c21bcecceda1000000620000ab60201b60201c565b620003bb565b6001600160a01b038216620000db5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000e960008383620000ed565b5050565b6001600160a01b0383166200011c57806002600082825462000110919062000393565b90915550620001909050565b6001600160a01b03831660009081526020819052604090205481811015620001715760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000d2565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001ae57600280548290039055620001cd565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021391815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200024b57607f821691505b6020821081036200026c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002c2576000816000526020600020601f850160051c810160208610156200029d5750805b601f850160051c820191505b81811015620002be57828155600101620002a9565b5050505b505050565b81516001600160401b03811115620002e357620002e362000220565b620002fb81620002f4845462000236565b8462000272565b602080601f8311600181146200033357600084156200031a5750858301515b600019600386901b1c1916600185901b178555620002be565b600085815260208120601f198616915b82811015620003645788860151825594840194600190910190840162000343565b5085821015620003835787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003b557634e487b7160e01b600052601160045260246000fd5b92915050565b610abf80620003cb6000396000f3fe6080604052600436106100e85760003560e01c806370a082311161008a578063a6ad882211610059578063a6ad88221461024c578063a9059cbb14610262578063d0df137414610282578063dd62ed3e146102a457600080fd5b806370a08231146101ee5780637a28fb881461019457806395d89b4114610224578063a1903eab1461023957600080fd5b806318160ddd116100c657806318160ddd1461017f578063192084511461019457806323b872dd146101b2578063313ce567146101d257600080fd5b8063027f7399146100ed57806306fdde031461012d578063095ea7b31461014f575b600080fd5b3480156100f957600080fd5b5061011a6101083660046108b7565b60056020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561013957600080fd5b506101426102ea565b60405161012491906108d9565b34801561015b57600080fd5b5061016f61016a366004610928565b61037c565b6040519015158152602001610124565b34801561018b57600080fd5b5060025461011a565b3480156101a057600080fd5b5061011a6101af366004610952565b90565b3480156101be57600080fd5b5061016f6101cd36600461096b565b610396565b3480156101de57600080fd5b5060405160128152602001610124565b3480156101fa57600080fd5b5061011a6102093660046108b7565b6001600160a01b031660009081526020819052604090205490565b34801561023057600080fd5b506101426103ba565b61011a6102473660046108b7565b6103c9565b34801561025857600080fd5b5061011a61019081565b34801561026e57600080fd5b5061016f61027d366004610928565b610483565b34801561028e57600080fd5b506102a261029d3660046108b7565b610491565b005b3480156102b057600080fd5b5061011a6102bf3660046109a7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102f9906109da565b80601f0160208091040260200160405190810160405280929190818152602001828054610325906109da565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b60003361038a818585610577565b60019150505b92915050565b6000336103a4858285610584565b6103af858585610603565b506001949350505050565b6060600480546102f9906109da565b60008034116104145760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590811551208185b5bdd5b9d60721b60448201526064015b60405180910390fd5b3461041f3382610662565b3360008181526005602052604090819020429055517f96a25c8ce0baabc1fdefd93e9ed25d8e092a3332f3aa9a41722b5697231d1d1a9061047590349087909182526001600160a01b0316602082015260400190565b60405180910390a292915050565b60003361038a818585610603565b6001600160a01b03811660009081526005602052604081205490036104b35750565b6001600160a01b0381166000908152600560205260408120546104d69042610a2a565b905060006104f9836001600160a01b031660009081526020819052604090205490565b905060008211801561050b5750600081115b156105725760006105226301e13380612710610a3d565b8361052f61019085610a3d565b6105399190610a3d565b6105439190610a54565b90508015610555576105558482610662565b506001600160a01b03831660009081526005602052604090204290555b505050565b610572838383600161069c565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156105fd57818110156105ee57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161040b565b6105fd8484848403600061069c565b50505050565b6001600160a01b03831661062d57604051634b637e8f60e11b81526000600482015260240161040b565b6001600160a01b0382166106575760405163ec442f0560e01b81526000600482015260240161040b565b610572838383610771565b6001600160a01b03821661068c5760405163ec442f0560e01b81526000600482015260240161040b565b61069860008383610771565b5050565b6001600160a01b0384166106c65760405163e602df0560e01b81526000600482015260240161040b565b6001600160a01b0383166106f057604051634a1406b160e11b81526000600482015260240161040b565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105fd57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161076391815260200190565b60405180910390a350505050565b6001600160a01b03831661079c5780600260008282546107919190610a76565b9091555061080e9050565b6001600160a01b038316600090815260208190526040902054818110156107ef5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161040b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661082a57600280548290039055610849565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161088e91815260200190565b60405180910390a3505050565b80356001600160a01b03811681146108b257600080fd5b919050565b6000602082840312156108c957600080fd5b6108d28261089b565b9392505050565b60006020808352835180602085015260005b81811015610907578581018301518582016040015282016108eb565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561093b57600080fd5b6109448361089b565b946020939093013593505050565b60006020828403121561096457600080fd5b5035919050565b60008060006060848603121561098057600080fd5b6109898461089b565b92506109976020850161089b565b9150604084013590509250925092565b600080604083850312156109ba57600080fd5b6109c38361089b565b91506109d16020840161089b565b90509250929050565b600181811c908216806109ee57607f821691505b602082108103610a0e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561039057610390610a14565b808202811582820484141761039057610390610a14565b600082610a7157634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561039057610390610a1456fea264697066735822122045a56bf09de7cd92416ae5ea76e800c4bedac19d0ea04250e2e221f15321ee6e64736f6c63430008180033";

type MockLidoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLidoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLido__factory extends ContractFactory {
  constructor(...args: MockLidoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockLido & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockLido__factory {
    return super.connect(runner) as MockLido__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLidoInterface {
    return new Interface(_abi) as MockLidoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockLido {
    return new Contract(address, _abi, runner) as unknown as MockLido;
  }
}
